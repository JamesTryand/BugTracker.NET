<configuration xmlns="http://schemas.microsoft.com/.NetConfiguration/v2.0">

	<configSections>
		<section
   name="btnetSettings"
   type="System.Configuration.NameValueFileSectionHandler,System, Version=1.0.3300.0,Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	</configSections>

	<system.web>
		<!--

		BugTracker.NET is not comaptible with Session serialization.
		
		Your "sessionState" setting has to be "InProc".		
		-->

<!-- for testing -->
<!--  
<sessionState
    mode="SQLServer"
    sqlConnectionString="server=(local);user id=sa;password=;Trusted_Connection=no"
    cookieless="false"
    timeout="20"
/>		 
-->

		<sessionState mode="InProc" timeout="20" />
		<compilation debug="true" />
		<pages validateRequest="true" />
	
	
		<httpRuntime executionTimeout="300" maxRequestLength="51200"/>
	
	</system.web>

	<btnetSettings>
     
		<!--
			Change this to point to your database
		-->

    	<add
			key="ConnectionString"
			value="server=(local);database=btnet3;user id=sa;password=;Trusted_Connection=no"
		/>

		<!--
			These entries control where attachment file are uploaded to and how large
			the files can be.
			
			For the UploadFolder setting, if you specify the folder starting with a 
			drive letter or the \\ that indicates a UNC path, it's treated as a full path.  
			For example: c:\\something or \\somemachine\something

			Otherwise it's treated as a path relative to where you virtual directory is
			located.

		-->
		<add key="UploadFolder" value="" />
		<!--<add key="MaxUploadSize" value="1000000" />-->
		<add key="MaxUploadSize" value="20111222" />
		
		


		<!--
			Used when creating absolute href's.  For example, in notification emails.
			Don't forget trailing slash!.
		-->
		<add key="AbsoluteUrlPrefix" value="http://127.0.0.1/btnet/"/>


		<!--
			You can turn the logging and emailing of errors on and off.
			Log file name is "btnet_log_yyyy_mm_dd.txt"
			
			For the LogFileFolder setting, if you specify the folder starting with a 
			drive letter or the \\ that indicates a UNC path, it's treated as a full path.  
			For example: c:\\something or \\somemachine\something
			
			Otherwise it's treated as a path relative to where you virtual directory is
			located.
			
			LogEnabled turns on and off logging as a whole.
			LogSqlEnabled turns on and off just the logging of SQL statements, but
			that's about 98% of what gets logged, so if you want to reduce the
			volume, turn that off.
			
		-->
		<add key="LogEnabled" value="1"/>
		<add key="LogSqlEnabled" value="1"/>
		<add key="LogFileFolder" value="c:\temp"/>


		<!-- If BugTracker.NET itself experiences an error, it can send an email notification -->
		<add key="ErrorEmailEnabled" value="1"/>
		<add key="ErrorEmailTo" value="YOUR EMAIL HERE"/>
		<add key="ErrorEmailFrom" value="FROM EMAIL HERE"/>


		<!--
			You can "subscribe" to email notifications on a per-bug basis.
			You will receive an email whenever the bug is updated.
		-->
		<add key="NotificationEmailEnabled" value="1"/>
		<add key="NotificationEmailFrom" value="FROM EMAIL HERE"/>

		<!--
			This controls the format of the subject of the email notifications.
			The available variables are:
			$THING$ - from the "SingularBugLabel" setting
			$BUGID$
			$ACTION$ - added or changed
			$SHORTDESC$
			$PROJECT$
			$CATEGORY$
			$ORGANIZATION$
			$PRIORITY$
			$STATUS$
			$TRACKINGID$ - from the "TrackingIdString" setting
		-->
		<add key="NotificationSubjectFormat" value="$THING$:$BUGID$ was $ACTION$ - $SHORTDESC$ $TRACKINGID$"/>


		<!--
			Controls whether notifications are sent as just one
			email with a lot of recipients, or as several separate
			emails, each with one recipient.   The first way is faster.
		-->
		<add key="SendJustOneEmail" value="1"/>

		<!--
			If you aren't using the local SMTP server that comes with IIS,
			set the name, user, and password for your SMTP server here.
		-->

		<!-- Sample SMTP Settings -->

		<!--
		These settings work with my SBC account
		-->
		
		<!--
		<add key="SmtpServer" value="smtp.sbcglobal.yahoo.com"/>
		<add key="SmtpServerAuthenticateUser" value="ctrager@sbcglobal.net"/>
		<add key="SmtpServerAuthenticatePassword" value="MY PASSWORD"/>
		-->
		
		<!--
		These settings work with my GMail account
		-->
		
		<add key="SmtpServer" value="smtp.gmail.com"/>
		<add key="SmtpServerAuthenticateUser" value="ctrager@gmail.com"/>
		<add key="SmtpServerPort" value="465"/>
		<add key="SmtpUseSSL" value="1"/>
		<add key="SmtpServerAuthenticatePassword" value=""/>
		

		<!--
		Specify the pickup directory if you have the problem described here:
		http://support.microsoft.com/default.aspx?scid=kb;en-us;816789#8
		-->

		<!--
		<add key="SmtpServerPickupDirectory" value=""/>
		<add key="SmtpSendUsing" value="1"/>
		-->


		<!--
		Ignore this setting unless you are esperiencing the symptoms
		related to this: http://cr.yp.to/docs/smtplf.html
		-->
		<!--
		<add key="SmtpForceReplaceOfBareLineFeeds" value="1"/>
		-->

		
		<!--
		By default, emails are UTF8 encoded.  If that doesn't work for you,
		uncomment the following.
		-->
		<!--
		<add key="BodyEncodingUTF8" value="0"/>
		-->


		<!--
		From Martin:
		I added a new value to the web.config
		<add key="CultureName" value="de-DE" />
		For the US, the setting should be "en-US"!
		If no value is set the current culture info on the ASP process on the server
		is used.

		If this culture info is set correctly all parsing is done correctly.

		The original comment here was:
			If you set CultureName, you don't have to set "DateTimeFormat" and 	"JustDateFormat".
			If no values are set the default settings of the culture are used.
			If "DateTimeFormat" or "JustDateFormat" are used, they overwrite the culture
			settings selected by "CultureName".
			So the bugtracker will also work completly correct without any of
			"CultureName", "DateTimeFormat", "JustDateFormat" being set.
			
		But somebody else points out:
			When a search is done including criteria for dates,
			these dates are parsed using the culture configured as
			the 'CultureName' in the web config file.
			This is fine, but the web.config file suggests that the
			CultureName settings is not needed if DateTimeFormat
			and JustDateFormat are set. This is not correct since
			parsing of dates from the search screen does not use
			either of these settings, only CultureName		
			
		So, if you are having trouble with date formats, use all the settings
		here so that you have the most control.    I'm sorry it' so confusing.   I'm
		very open to making it simpler here.
		
		-->

		<!--
		<add key="CultureName" value="de-DE" />
		<add key="CultureName" value="en-US" />
		-->


		<!--
			Set the first to your local date-time format.
			Set the second to your local date format without time
		-->

		<!-- American style -->
		<add key="DateTimeFormat" value="yyyy-MM-dd h:mm tt" />
		<add key="JustDateFormat" value="yyyy-MM-dd" />

		<!-- European style
		<add key="DateTimeFormat" value="dd.MM.yyyy HH:mm" />
		<add key="JustDateFormat" value="dd.MM.yyyy" />
		-->

		<!--
		Format SQL Server expects the dates to be in
		This doesn't affect what user sees on web pages.
		-->
		<add key="SQLServerDateFormat" value="yyyyMMdd HH\:mm\:ss" />


		<!--
			If category/project/status/priority are not enough bug attributes
			for you, here's one more that you can name yourself.
			
			This is just one of the ways, a simple way, of creating
			custom fields.  For more info, visit
			http://www.ifdefined.com/README.html
		-->
		<add key="ShowUserDefinedBugAttribute" value="1"/>
		<add key="UserDefinedBugAttributeName" value="MyUDF"/>


		<!--
			If you don't like seeing the SQL on the queries or search page.
		-->
		<add key="HideSql" value="0"/>


		<!--
			This controls whether entries are inserted into the bug_history table
			when the user changes description, category, priority, assigned to. or status.
		-->
		<add key="TrackBugHistory" value="1" />

		<!--
			Sort order of comments and history.
			"desc" is most recent first.
			"asc" is oldest first.
		-->
		<add key="CommentSortOrder" value="desc"/>


		<!--
			Controls whether the bug history entries are printed when
			you print bugs
		-->
		<add key="PrintHistory" value="1"/>


		<!--

			Set WindowsAuthentication to "1" if you want to use
			windows authentication instead of the logon page.

			1) Configure your IIS virtual directory so that anon
			access is unchecked and windows authentication is checked

			2) Configure IE to automatically send username and
			password

			3) Usernames in users table should match your
			windows usernames. Passwords in users table will be
			ignored.

			If you want BOTH modes to work, set "WindowsAuthentication"
			to "2".

			Configure your IIS virtual directory as normal (allowing
			anon access).   Follow these instrunctions for the file "loginnt.aspx":

			* From IIS Manager, right-click the file loginnt.aspx and select properties
			* Select the Security tab
			* Click Edit in the Anonymous Access and Authentication frame
			* Ensure Anonymous Access and Basic Authentication is cleared
			* Ensure Integrated Windows Authentication is selected
			* Click OK
			* Select the Custom Errors tab
			* Select HTTP Error 401;2 and click Edit Properties
			* Set the message type to File and select the file login.htm, including the full local path. (Note that this must be a file	reference and not a URL)

			The idea is that when the user access default.aspx, it redirects to loginnt.aspx.
			When access to loginnt.aspx is denied, IIS resonds with the custom error login.htm.
			Login.htm then redirects to default.aspx.

		-->

		<add key="WindowsAuthentication" value="0"/>



		<!--

		When per-project permission is not specified, what is the permission?
		3 = "reporter" allow adds but after bug is added, only allow posting of additional comments
		2 = allow everything
		1 = allow view only
		0 = hide
		
		-->

		<add key="DefaultPermissionLevel" value="2"/>


		<!--
		TextArea for Custom fields
		This setting is used to format custom defined fields.  If a field is greater than TextAreaThreshold, it will be
		displayed as a TextArea instead of a normal Input control.  The number of rows in the TextArea is
		determined by dividing the field length by TextAreaThreshold up to a maximum value indicated by MaxTextAreaRows.
		-->
		<add key="TextAreaThreshold" value="80"/>
		<add key="MaxTextAreaRows" value="3"/>


		<!--
		Set this to "1" if you want the passwords in the db to be stored encrypted.

		When you logon, BugTracker.NET will check the database for both the encrypted and unecrypted forms,
		so setting this on and off won't break anything.

		Passwords that are already stored aren't affected.  If you want to change what's already stored,
		you need to go the the "settings" page or "edit user" page.
		-->

		<add key="EncryptStoredPasswords" value="1"/>


		<!--
		Some folks don't like the word "bug".   These next four settings allow you to override the text of the
		logo and the word bugs.
		-->
		<add key="AppTitle" value="BugTracker.NET"/>
		<add key="SingularBugLabel" value="bug"/>
		<add key="PluralBugLabel" value="bugs"/>



		<!-- customize marker for creating hyperlinks in bug comments -->
		<add key="BugLinkMarker" value="bugid#"/>

		<!--
		In dropdowns featuring users, do you want to see the logon names or their full names, in
		"LastName, FirstName" format?
		
		If you set this to "1", for the user-related filter dropdowns to work, you will also 
		have to adjust your SQL that you use for the bug lists.   Your SQL will need to end
		up with parts of it looking something like this.   The names of the columns must
		be "reported by" and "assigned to" because the logic that creates the filter dropdowns
		looks for those names.
		
		~
		~
		rpt.us_lastname + ', ' + rpt.us_firstname [reported by], 
		asg.us_lastname + ', ' + asg.us_firstname [assigned to],
		~
		~
		left outer join users rpt ...
		left outer join users asg...

		
		-->
		<add key="UseFullNames" value="0"/>



		<!--
		In edit_bug.aspx, you can have your own link appear:
		<a href="your_url.aspx?bugid=...">YOUR LINK</a>

		You have to HTML encode any HTML tags embedded here.

		-->
		<!--
		<add key="CustomBugLinkLabel" value="YOUR LINK"/>
		<add key="CustomBugLinkUrl" value="your_url.aspx"/>
		-->



		<!--
		You can add to the menu, just to the left of the "about" link
		You have to HTML encode any HTML tags embedded here.
		-->
		<!--
		<add key="CustomMenuLinkLabel" value="YOUR LINK"/>
		<add key="CustomMenuLinkUrl" value="your_url.aspx"/>
		-->



		<!--
		You can add a link to a bug post (comment, attachment, email, etc)
		Your link will looks something like this:
		<a href="your_url.aspx?postid=99999">YOUR LINK</a>

		You have to HTML encode any HTML tags embedded here.
		
		Jochen Jonckheere has contributed a fun sample that uses
		a web service to translate the text of a bug comment.  
		-->

		<!--
		<add key="CustomPostLinkLabel" value="translate"/>
		<add key="CustomPostLinkUrl" value="translate.aspx"/>
		-->
		


		<!--
		Display your own HTML on the default.aspx page.   You have to HTML encode it here.
		-->
		<!--
		<add key="CustomWelcomeHtml" value="&lt;div style='color:red;font-weight:bold;'&gt;For demo, logon as &quot;user1&quot;, &quot;user2&quot;, or &quot;user3&quot;.&lt;br&gt;Password=&quot;guest&quot;&lt;div&gt;"/>
		-->




		<!--
			Customize the text that appears in the subject of emails that allows
			us to related incoming emails to the bugids they refer to.   We parse
			these words in the subject to get the bugid.
		-->
		<add key="TrackingIdString" value="DO NOT EDIT THIS:"/>



		<!--
			If you want replies to be generated automatically.
		-->
<!--
		<add key="AutoReplyText" value="Thanks for you email.
Don't call us, we'll call you."/>
-->

		<!--
			SearchSQL allows you to customize the columns, etc that are displayed on the "search"
			page, search.aspx.

			The "[br]" characters are replaced by line breaks.   They are there to make the SQL
			display nicely, but the SQL will work without them too.

			The "$WHERE$" marks the spot in the SQL where the logic will modify the where
			clause based on what the user entered in the search form.
		-->

<!--
		<add key="SearchSQL" value="[br]select isnull(pr_background_color,'#ffffff') [color], bg_id [id],
[br]bg_short_desc [desc] /* *** ADD OTHER COLUMNS YOU WANT HERE **** */
[br]from bugs
[br]left outer join users rpt on rpt.us_id = bg_reported_user
[br]left outer join users asg on asg.us_id = bg_assigned_to_user
[br]left outer join projects on pj_id = bg_project
[br]left outer join categories on ct_id = bg_category
[br]left outer join priorities on pr_id = bg_priority
[br]left outer join statuses on st_id = bg_status
[br]left outer join user_defined_attribute on udf_id = bg_user_defined_attribute
[br]$WHERE$
[br]order by bg_short_desc
"/>
-->


		<!--
			Search has a "Suggest" feature like Google Labs "Suggest"
			at http://www.google.com/webhp?complete=1&hl=en.
			
			Suggest starts working after you type in 3 characters in the "description contains"
			field.   But you can change the number of characters required here.
		-->
		<add key="SearchSuggestMinChars" value="3"/>



		<!--
			When navigating back to the bug list using the browser's "Back" button,
			do you get a warning "Warning: Page has Expired"?   If so, try changing 
			this from "POST" to "GET".
			
			But, if you get a javascript error when submitting the form around the
			line "theForm.submit()", then use "POST".
			
			GET can break if you are sending too much data back to the server - and
			ASP.NET's viewstate mechanism is kind of long.
		-->
		<add key="BugListFormSubmitMethod" value="GET"/>


		
		<!--
		
			This next two settings are to fix bugs some people have, but I can't 
			reproduce. 
			
			If you are experiencing problems in the edit_query.aspx page, where
			instead of the symbols for "greater than" and "less than", ">" and "<"
			you instead see the html encoded versions, "&gt;", "&lt;", then
			try changing HtmlEncodeSql to 1.
			
			Similarly, if you are experiencing problems in the edit_comment.aspx,
			where it seems to be getting mixed up about encoding and decoding, the
			try setting HtmlDecodeComment to 1.
			
			
		-->
		<add key="HtmlEncodeSql" value="0"/>
		<add key="HtmlDecodeComment" value="1"/>



		<!--
			You probably don't need the following.
		
			Allow special text in incoming emails to set a bug's project, category, etc		
			Look at the source code of insert_bug.aspx to see exactly what's going on.
			
			The variables expect to be followed by an integer, the database id of the
			corresponding row in the db.  The variables are:
			$CATEGORY$:
			$PRIORITY$:
			$ASSIGNEDTO$:
			$STATUS$:
			$PROJECT$:
		-->
		<add key="ProcessVariablesInEmails" value="0"/>
		


		<!--
			If you want emails handled by btnet_service.exe to automatically reset a bugs 
			status, set this to the st_id, the integer, of the status you want.   
			
			Set it to 0 to turn	this feature off.
		-->
		
		<add key="StatusResultingFromIncomingEmail" value="0"/>


		<!--
			Make it harder for people to loose data by navigating away from the add/edit bug
			page by turning this on.
		-->
		
		<add key="PromptBeforeLeavingEditBugPage" value="0"/>



		<!-- 
			If you set this to 1, you will see an additional "Visible to internal users only"
			checkbox in pages to edit bugs, attachments, and comments.  If you check it, then
			that attachement or comment will not be visible to users who are marked "external".
			
			They also will not be visible in email notifications for anybody, even internal users.
			
			They ARE visible in prints for internal users, and they are visible when an
			internal users checks "Include print of Bug" when sending email.
			
			If you want the entire bug to be private, create another project and don't give
			the external users permissions for that project, and then assign the bug to that other
			project. 
		-->
		<add key="EnableInternalOnlyPosts" value="1"/>

		<!--
			Turning this on make a "revisions" link visible on the add/edit bug page.
			See the "Subversion" folder for hook scripts that will integrate Subversion with
			BugTracker.NET.  When you do a Subversion checkin and include the BugTracker.NET
			bug id, the scripts will update a table in the BugTracker.NET database's
			bug_file_revisions table.
			
			For step-by-step instructions on how to use Subversion with BugTracker.NET,
			see http://ifdefined.com/README.html 
			
		-->
		<add key="EnableSubversionIntegration" value="1"/>
		
		<!-- 
			This setting turns on the links to "diff" and "history" in 
			the view_svn_file_revisions.aspx page.
			
			You could leave this blank but turn on the WebSvnUrl setting,
			or vice versa, or turn them both on.
	
		-->
		<add key="SubversionRepositoryUrl" value="svn://127.0.0.1/svnrepos/"/>  <!-- with the trailing slash!! -->
		
		<!-- svn.exe, the Subversion client, needs to be on the web server -->
		<add key="SubversionPathToSvn" value="svn.exe"/>
		
		<!-- If your Subversion repository doesn't allow anonymous reads, then put 
		the Subversion user and password here that the web server will pass to svn.exe -->
		<add key="SubversionUsername" value=""/>
		<add key="SubversionPassword" value=""/>
		
		<!-- 
			This adds another link, "WebSvn" to view_svn_file_revisions.aspx, a link to WebSvn. 
			Make sure to replace the & symbol with &amp; in your URL.
			The logic in view_svn_file_revisions.aspx replaces $PATH and $REV with
			the path and revision of the file.
			Note the leading ? before $PATH.
		-->
		<!--
		<add key="WebSvnUrl" value="http://127.0.0.1:8080/websvn/filedetails.php?repname=svnrepos&amp;path=/$PATH&amp;rev=$REV&amp;sc=0"/>
		-->

		<add key="StoreAttachmentsInDatabase" value="1" />
	</btnetSettings>

</configuration>
